{"ast":null,"code":"import axios from 'axios';\nexport default {\n  methods: {\n    async $post(url, param) {\n      return (await axios({\n        method: 'post',\n        url,\n        data: param\n      }).catch(e => {\n        console.error(e);\n      })).data;\n    },\n\n    async $get(url, param) {\n      return (await axios.get(url, {\n        params: param\n      }).catch(e => {\n        console.error(e);\n      })).data;\n    },\n\n    async $delete(url, param) {\n      return (await axios.delete(url, {\n        params: param\n      }).catch(e => {\n        console.error(e);\n      })).data;\n    },\n\n    $base64(file) {\n      return new Promise(resolve => {\n        const fr = new FileReader();\n\n        fr.onload = e => {\n          resolve(e.target.result);\n        };\n\n        fr.readAsDataURL(file); //이미지를 문자열로 변형\n      });\n    }\n\n  }\n};","map":{"version":3,"names":["axios","methods","$post","url","param","method","data","catch","e","console","error","$get","get","params","$delete","delete","$base64","file","Promise","resolve","fr","FileReader","onload","target","result","readAsDataURL"],"sources":["C:/Apache24/teamB-Pjt/FRONT/src/mixins.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nexport default {\r\n    methods: {\r\n        async $post(url, param) {\r\n            return (await axios({\r\n                method: 'post',\r\n                url,\r\n                data: param\r\n            }).catch( e => {\r\n                console.error(e);\r\n            })).data;\r\n        },\r\n        async $get(url, param) {\r\n            return (await axios.get(url, {\r\n                params: param\r\n            }).catch( e => {\r\n                console.error(e);\r\n            })).data;\r\n        },\r\n        async $delete(url, param) {\r\n            return (await axios.delete(url, {\r\n                params: param\r\n            }).catch( e => {\r\n                console.error(e);\r\n            })).data;\r\n        },\r\n        $base64(file) {\r\n            return new Promise(resolve => {\r\n                const fr = new FileReader();\r\n                fr.onload = e => {\r\n                    resolve(e.target.result);\r\n                }\r\n                fr.readAsDataURL(file); //이미지를 문자열로 변형\r\n            });\r\n        }\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;EACXC,OAAO,EAAE;IACL,MAAMC,KAAN,CAAYC,GAAZ,EAAiBC,KAAjB,EAAwB;MACpB,OAAO,CAAC,MAAMJ,KAAK,CAAC;QAChBK,MAAM,EAAE,MADQ;QAEhBF,GAFgB;QAGhBG,IAAI,EAAEF;MAHU,CAAD,CAAL,CAIXG,KAJW,CAIJC,CAAC,IAAI;QACXC,OAAO,CAACC,KAAR,CAAcF,CAAd;MACH,CANa,CAAP,EAMHF,IANJ;IAOH,CATI;;IAUL,MAAMK,IAAN,CAAWR,GAAX,EAAgBC,KAAhB,EAAuB;MACnB,OAAO,CAAC,MAAMJ,KAAK,CAACY,GAAN,CAAUT,GAAV,EAAe;QACzBU,MAAM,EAAET;MADiB,CAAf,EAEXG,KAFW,CAEJC,CAAC,IAAI;QACXC,OAAO,CAACC,KAAR,CAAcF,CAAd;MACH,CAJa,CAAP,EAIHF,IAJJ;IAKH,CAhBI;;IAiBL,MAAMQ,OAAN,CAAcX,GAAd,EAAmBC,KAAnB,EAA0B;MACtB,OAAO,CAAC,MAAMJ,KAAK,CAACe,MAAN,CAAaZ,GAAb,EAAkB;QAC5BU,MAAM,EAAET;MADoB,CAAlB,EAEXG,KAFW,CAEJC,CAAC,IAAI;QACXC,OAAO,CAACC,KAAR,CAAcF,CAAd;MACH,CAJa,CAAP,EAIHF,IAJJ;IAKH,CAvBI;;IAwBLU,OAAO,CAACC,IAAD,EAAO;MACV,OAAO,IAAIC,OAAJ,CAAYC,OAAO,IAAI;QAC1B,MAAMC,EAAE,GAAG,IAAIC,UAAJ,EAAX;;QACAD,EAAE,CAACE,MAAH,GAAYd,CAAC,IAAI;UACbW,OAAO,CAACX,CAAC,CAACe,MAAF,CAASC,MAAV,CAAP;QACH,CAFD;;QAGAJ,EAAE,CAACK,aAAH,CAAiBR,IAAjB,EAL0B,CAKF;MAC3B,CANM,CAAP;IAOH;;EAhCI;AADE,CAAf"},"metadata":{},"sourceType":"module"}